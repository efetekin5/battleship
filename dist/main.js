(()=>{"use strict";const e=(e,t)=>{const o=document.createElement("div");o.classList.add("cell"),"p"===t?(o.id=`${t}${e}`,document.querySelector(".playerBoard").appendChild(o)):"ai"===t&&(o.id=`${t}${e}`,document.querySelector(".aiBoard").appendChild(o))},t=(e,t,o)=>{if(o)for(let o=0;o<100;o+=1)!1!==e[o].storedShip&&!0===e[o].beenHit?document.getElementById(`${t}${o}`).style.backgroundColor="rgb(133, 255, 179)":!1===e[o].storedShip&&!0===e[o].beenHit?document.getElementById(`${t}${o}`).style.backgroundColor="rgb(255, 133, 133)":document.getElementById(`${t}${o}`).style.backgroundColor="white";else for(let o=0;o<100;o+=1)!1!==e[o].storedShip&&!1===e[o].beenHit?document.getElementById(`${t}${o}`).style.backgroundColor="rgb(68, 68, 68)":!1!==e[o].storedShip&&!0===e[o].beenHit?document.getElementById(`${t}${o}`).style.backgroundColor="rgb(133, 255, 179)":!1===e[o].storedShip&&!0===e[o].beenHit?document.getElementById(`${t}${o}`).style.backgroundColor="rgb(255, 133, 133)":document.getElementById(`${t}${o}`).style.backgroundColor="white"},o=(e,t)=>({length:e,hitCount:0,sunk:!1,hit:(e,t)=>{const o=t[e].storedShip;return o.hitCount<o.length&&(o.hitCount+=1,o.hitCount===o.length&&(o.sunk=!0)),0},isVertical:t}),r=(e,t)=>{const r=[...e];if(1===Math.floor(2*Math.random())+1){let e,n;do{e=Math.floor(Math.random()*(10-t+1)),n=10*Math.floor(10*Math.random())}while(r.slice(n+e,n+e+t).some((e=>e.storedShip)));const l=o(t,!1);for(let o=0;o<t;o+=1)r[n+e+o].storedShip=l}else{let e,n,l;do{e=Math.floor(10*Math.random()),n=10*Math.floor(Math.random()*(10-t+1));const o=[];for(let l=n+e;l<e+n+10*t;l+=10)o.push(r[l]);l=o.some((e=>e.storedShip))}while(l);const d=o(t,!0);for(let o=0;o<10*t;o+=10)r[n+e+o].storedShip=d}return r},n=()=>{let o=[];return{board:o,createBoard:t=>{for(let r=0;r<100;r+=1)o[r]={storedShip:!1,beenHit:!1},e(r,t)},placeShip:(e,t)=>{if(e.isVertical)for(let r=t;r<t+10*e.length;r+=10)o[r].storedShip=e;else for(let r=t;r<t+e.length;r+=1)o[r].storedShip=e},receiveAttack:(e,r,n)=>{!1!==o[e].storedShip?(o[e].beenHit=!0,o[e].storedShip.hit(e,o),t(o,r,n)):(o[e].beenHit=!0,t(o,r,n))},allShipsSunk:()=>{for(let e=0;e<100;e+=1)if(!1!==o[e].storedShip&&!1===o[e].beenHit)return!1;return!0},randomShips:(e,n)=>{let l=[...o];for(let e=0;e<100;e+=1)l[e].storedShip=!1;l=r(o,5),l=r(o,4),l=r(o,3),l=r(o,3),l=r(o,2),t(l,e,n),o=l},resetBoard:()=>{for(let e=0;e<100;e+=1)o[e].storedShip=!1,o[e].beenHit=!1}}},l=(e,t)=>({name:e,oppBoard:t,attack:(e,o,r)=>{t.receiveAttack(e,o,r)},aiAttack:()=>{let e;do{e=Math.floor(99*Math.random())}while(t.board[e].beenHit);t.receiveAttack(e,"p",!1)}}),d=(e,o,r)=>{document.querySelector(".winnerText").textContent=r?"You Won Do You Want To Play Again?":"Ai Won Do You Want To Play Again";const n=document.querySelector(".winBackground");n.style.display="flex",document.querySelector(".restartButton").addEventListener("click",(()=>{e.resetBoard(),t(e.board,"p",!1),o.resetBoard(),t(o.board,"ai",!0),document.querySelector(".buttons").style.display="flex",document.querySelector(".startButton").style.display="flex";const r=document.querySelector(".manual");r.style.display="flex",r.style.removeProperty("margin-left");const l=document.querySelector(".random");l.style.display="flex",l.style.removeProperty("margin-left"),document.querySelector(".axisButton").remove(),n.style.display="none"}))},i=(e,t,o,r)=>{const n=document.querySelector(".axisButton"),l=Number(e.target.id.slice(1)),d=l%10,i=Math.floor(l/10);if(o){if("Horizontal"===n.textContent){const e=d-t;if(e>0)for(let o=0;o<t-e;o+=1){const e=document.querySelector(`#p${l+o}`);!1===r[l+o].storedShip&&(e.style.backgroundColor="white")}else for(let e=0;e<t;e+=1){const t=document.querySelector(`#p${l+e}`);!1===r[l+e].storedShip&&(t.style.backgroundColor="white")}}else if("Vertical"===n.textContent){const e=i-t;if(e>0)for(let o=0;o<10*t-10*e;o+=10){const e=document.querySelector(`#p${l+o}`);!1===r[l+o].storedShip&&(e.style.backgroundColor="white")}else for(let e=0;e<10*t;e+=10){const t=document.querySelector(`#p${l+e}`);!1===r[l+e].storedShip&&(t.style.backgroundColor="white")}}}else if("Horizontal"===n.textContent){const e=9-d+1;if(d>9-t+1){for(let e=0;e<t;e+=1)if(!1!==r[l+e].storedShip)return;for(let t=0;t<e;t+=1)document.querySelector(`#p${l+t}`).style.background="rgb(185, 74, 74)"}else for(let e=0;e<t;e+=1){const t=document.querySelector(`#p${l+e}`);!1===r[l+e].storedShip&&(t.style.background="lime")}}else if("Vertical"===n.textContent){const e=9-i+1;if(i>9-t+1)for(let t=0;t<10*e;t+=10){const e=document.querySelector(`#p${l+t}`);!1===r[l+t].storedShip&&(e.style.background="rgb(185, 74, 74)")}else for(let e=0;e<10*t;e+=10){const t=document.querySelector(`#p${l+e}`);!1===r[l+e].storedShip&&(t.style.background="lime")}}},c=n();c.createBoard("p");const a=n();a.createBoard("ai");const s=l("player",a),u=l("ai",c),h=document.querySelector(".random"),y=document.querySelector(".manual");h.addEventListener("click",(()=>{y.style.display="none",h.style.marginLeft="115px",c.randomShips("p",!1)}));const p=e=>{const t=Number(e.target.id.slice(2));s.attack(t,"ai",!0),a.allShipsSunk()&&(d(c,a,!0),document.querySelectorAll('div.cell[id^="ai"]').forEach((e=>{e.removeEventListener("click",p)}))),u.aiAttack(),c.allShipsSunk()&&(d(c,a,!1),document.querySelectorAll('div.cell[id^="ai"]').forEach((e=>{e.removeEventListener("click",p)})))},m=document.querySelector(".startButton");m.addEventListener("click",(()=>{let e=0;for(let t=0;t<100;t+=1)!1!==c.board[t].storedShip&&(e+=1);17===e&&(document.querySelector(".buttons").style.display="none",m.style.display="none",a.randomShips("ai",!0),document.querySelectorAll('div.cell[id^="ai"]').forEach((e=>{e.addEventListener("click",p)})))})),y.addEventListener("click",(()=>{if(h.style.display="none",null===document.querySelector(".axisButton")){(()=>{const e=document.createElement("button");e.classList.add("axisButton"),e.textContent="Horizontal",e.addEventListener("click",(()=>{"Vertical"===e.textContent?e.textContent="Horizontal":e.textContent="Vertical"})),document.querySelector(".buttons").appendChild(e)})();const e=document.querySelectorAll('div.cell[id^="p"]');e.forEach((e=>{e.addEventListener("mouseenter",(e=>{let t=0;for(let e=0;e<100;e+=1)!1!==c.board[e].storedShip&&(t+=1);0===t?i(e,5,!1,c.board):5===t?i(e,4,!1,c.board):9===t||12===t?i(e,3,!1,c.board):15===t&&i(e,2,!1,c.board)}))})),e.forEach((e=>{e.addEventListener("mouseleave",(e=>{i(e,5,!0,c.board)}))})),e.forEach((e=>{e.addEventListener("click",(e=>{let r,n;n="Vertical"===document.querySelector(".axisButton").textContent;let l=0;for(let e=0;e<100;e+=1)!1!==c.board[e].storedShip&&(l+=1);0===l?r=o(5,n):5===l?r=o(4,n):9===l||12===l?r=o(3,n):15===l&&(r=o(2,n));const d=Number(e.target.id.slice(1));if(r.isVertical){for(let e=0;e<10*r.length;e+=10)if(!1!==c.board[d+e].storedShip)return}else for(let e=0;e<r.length;e+=1)if(!1!==c.board[d+e].storedShip)return;"rgb(185, 74, 74)"!==document.querySelector(`#p${d}`).style.background&&(c.placeShip(r,d),t(c.board,"p",!1))}))}))}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,