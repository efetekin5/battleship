(()=>{"use strict";const e=(e,t)=>{const o=document.createElement("div");o.classList.add("cell"),"p"===t?(o.id=`${t}${e}`,document.querySelector(".playerBoard").appendChild(o)):"ai"===t&&(o.id=`${t}${e}`,document.querySelector(".aiBoard").appendChild(o))},t=(e,t,o)=>{if(o)for(let o=0;o<100;o+=1)!1!==e[o].storedShip&&!0===e[o].beenHit?document.getElementById(`${t}${o}`).style.backgroundColor="rgb(133, 255, 179)":!1===e[o].storedShip&&!0===e[o].beenHit?document.getElementById(`${t}${o}`).style.backgroundColor="rgb(255, 133, 133)":document.getElementById(`${t}${o}`).style.backgroundColor="white";else for(let o=0;o<100;o+=1)!1!==e[o].storedShip&&!1===e[o].beenHit?document.getElementById(`${t}${o}`).style.backgroundColor="rgb(68, 68, 68)":!1!==e[o].storedShip&&!0===e[o].beenHit?document.getElementById(`${t}${o}`).style.backgroundColor="rgb(133, 255, 179)":!1===e[o].storedShip&&!0===e[o].beenHit?document.getElementById(`${t}${o}`).style.backgroundColor="rgb(255, 133, 133)":document.getElementById(`${t}${o}`).style.backgroundColor="white"},o=(e,t)=>({length:e,hitCount:0,sunk:!1,hit:(e,t)=>{const o=t[e].storedShip;return o.hitCount<o.length&&(o.hitCount+=1,o.hitCount===o.length&&(o.sunk=!0)),0},isVertical:t}),r=()=>{let r=[];return{board:r,createBoard:t=>{for(let o=0;o<100;o+=1)r[o]={storedShip:!1,beenHit:!1},e(o,t)},placeShip:(e,t)=>{if(e.isVertical)for(let o=t;o<t+10*e.length;o+=10)r[o].storedShip=e;else for(let o=t;o<t+e.length;o+=1)r[o].storedShip=e},receiveAttack:(e,o,n)=>{!1!==r[e].storedShip?(r[e].beenHit=!0,r[e].storedShip.hit(e,r),t(r,o,n)):(r[e].beenHit=!0,t(r,o,n))},allShipsSunk:()=>{for(let e=0;e<100;e+=1)if(!1!==r[e].storedShip&&!1===r[e].beenHit)return!1;return!0},randomShips:(e,n)=>{let l=[...r];for(let e=0;e<100;e+=1)l[e].storedShip=!1;l=((e,t)=>{const r=[...e];if(1===Math.floor(2*Math.random())+1){let e,n;do{e=Math.floor(Math.random()*(10-t+1)),n=10*Math.floor(10*Math.random())}while(r.slice(n+e,n+e+t).some((e=>e.storedShip)));const l=o(t,!1);for(let o=0;o<t;o+=1)r[n+e+o].storedShip=l}else{let e,n,l;do{e=Math.floor(10*Math.random()),n=10*Math.floor(Math.random()*(10-t+1));const o=[];for(let l=n+e;l<e+n+10*t;l+=10)o.push(r[l]);l=o.some((e=>e.storedShip))}while(l);const d=o(t,!0);for(let o=0;o<10*t;o+=10)r[n+e+o].storedShip=d}return r})(r,5),t(l,e,n),r=l},resetBoard:()=>{for(let e=0;e<100;e+=1)r[e].storedShip=!1,r[e].beenHit=!1}}},n=(e,t)=>({name:e,oppBoard:t,attack:(e,o,r)=>{t.receiveAttack(e,o,r)},aiAttack:()=>{let e;do{e=Math.floor(99*Math.random())}while(t.board[e].beenHit);t.receiveAttack(e,"p",!1)}}),l=(e,o,r)=>{document.querySelector(".winnerText").textContent=r?"You Won Do You Want To Play Again?":"Ai Won Do You Want To Play Again";const n=document.querySelector(".winBackground");n.style.display="flex",document.querySelector(".restartButton").addEventListener("click",(()=>{e.resetBoard(),t(e.board,"p",!1),o.resetBoard(),t(o.board,"ai",!0),document.querySelector(".buttons").style.display="flex",document.querySelector(".startButton").style.display="flex";const r=document.querySelector(".manual");r.style.display="flex",r.style.removeProperty("margin-left");const l=document.querySelector(".random");l.style.display="flex",l.style.removeProperty("margin-left"),n.style.display="none"}))},d=(e,t,o)=>{const r=document.querySelector(".axisButton"),n=Number(e.target.id.slice(1)),l=n%10,d=Math.floor(n/10);if(o){if("Horizontal"===r.textContent)for(let e=0;e<t;e+=1)document.querySelector(`#p${n+e}`).style.backgroundColor="white";else if("Vertical"===r.textContent)for(let e=0;e<10*t;e+=10)document.querySelector(`#p${n+e}`).style.backgroundColor="white"}else if("Horizontal"===r.textContent){const e=l-t;if(l>9-t+1)for(let o=0;o<t-e;o+=1)document.querySelector(`#p${n+o}`).style.background="rgb(185, 74, 74)";else for(let e=0;e<t;e+=1)document.querySelector(`#p${n+e}`).style.background="lime"}else if("Vertical"===r.textContent)if(d>9-t+1)for(let e=0;e<10*t;e+=10)document.querySelector(`#p${n+e}`).style.background="rgb(185, 74, 74)";else for(let e=0;e<10*t;e+=10)document.querySelector(`#p${n+e}`).style.background="lime"},i=r();i.createBoard("p");const a=r();a.createBoard("ai");const c=n("player",a),s=n("ai",i),u=document.querySelector(".random"),y=document.querySelector(".manual");u.addEventListener("click",(()=>{y.style.display="none",u.style.marginLeft="115px",i.randomShips("p",!1)}));const m=e=>{const t=Number(e.target.id.slice(2));c.attack(t,"ai",!0),a.allShipsSunk()&&(l(i,a,!0),document.querySelectorAll('div.cell[id^="ai"]').forEach((e=>{e.removeEventListener("click",m)}))),s.aiAttack(),i.allShipsSunk()&&(l(i,a,!1),document.querySelectorAll('div.cell[id^="ai"]').forEach((e=>{e.removeEventListener("click",m)})))},h=document.querySelector(".startButton");h.addEventListener("click",(()=>{let e=0;for(let t=0;t<100;t+=1)!1!==i.board[t].storedShip&&(e+=1);5===e&&(document.querySelector(".buttons").style.display="none",h.style.display="none",a.randomShips("ai",!0),document.querySelectorAll('div.cell[id^="ai"]').forEach((e=>{e.addEventListener("click",m)})))})),y.addEventListener("click",(()=>{if(u.style.display="none",null===document.querySelector(".axisButton")){(()=>{const e=document.createElement("button");e.classList.add("axisButton"),e.textContent="Horizontal",e.addEventListener("click",(()=>{"Vertical"===e.textContent?e.textContent="Horizontal":e.textContent="Vertical"})),document.querySelector(".buttons").appendChild(e)})();const e=document.querySelectorAll('div.cell[id^="p"]');e.forEach((e=>{e.addEventListener("mouseenter",(e=>{d(e,5,!1)}))})),e.forEach((e=>{e.addEventListener("mouseleave",(e=>{d(e,5,!0)}))}))}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,